local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer

repeat task.wait()
until game:GetService("ReplicatedStorage"):FindFirstChild("ShootEvent")

local ShootEvent = game:GetService("ReplicatedStorage").ShootEvent
ShootEvent.Parent = workspace
local FakeShootEvent = Instance.new("RemoteEvent",game:GetService("ReplicatedStorage"))
FakeShootEvent.Name = "ShootEvent"

local enable = true

local YieldFunctionDelayed = 0.5

local Events = {}
local Ticked = tick()
local function YieldFunction()
	if tick()-Ticked < YieldFunctionDelayed then return end
	task.spawn(function()
		Ticked = tick()
		task.wait(YieldFunctionDelayed)
		local Gun = LocalPlayer.Character:FindFirstChildOfClass("Tool") or LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
		if LocalPlayer.Character:FindFirstChild("Taser") then
			Gun = LocalPlayer.Character.Taser
		end
		ShootEvent:FireServer(Events, Gun)
		if Gun.Name ~= "Taser" then
			game:GetService("ReplicatedStorage").ReloadEvent:FireServer(Gun)
		end
		Events = {}
	end)
end

Players.LocalPlayer.CharacterAdded:Connect(function(Character)
	if not enable then return end
	local Listed = {}
	local Connected = {}
	Character.ChildAdded:Connect(function(Child)
		if Child:IsA("Tool") and not Connected[Child] then
			Connected[Child] = true
			Child.ChildAdded:Connect(function(Children)
				local timed = tick()
				repeat task.wait()
				until Children.Name == "RayPart" or tick() - timed >= 0.3
				if Children.Name == "RayPart" then
					local Cframe = Children.CFrame
					local Distance = Children.Size.Z
					local Head = Character:FindFirstChild("Head")
					if not Head then return end
					local RAY = Ray.new(Head.Position, (Cframe:ToWorldSpace(CFrame.new(0,0,Distance/2)).Position-Head.Position).Unit*Distance)
					local Part = workspace:FindPartOnRay(RAY, Character)
					Events[#Events+1] = {
						Hit = Part,
						Cframe = Cframe,
						Distance = Distance,
						RayObject = Ray.new(Vector3.new(),Vector3.new())
					}
					YieldFunction()
				end
			end)
		end
		if not Listed[Child] and Child:IsA("Tool") then
			Listed[Child] = true
			local Module = Child:FindFirstChildOfClass("ModuleScript") and require(Child:FindFirstChildOfClass("ModuleScript"))
			if Module then
				task.spawn(function()
					repeat task.wait()
						Module.AutoFire = true
						Module.FireRate = 0
						Module.StoredAmmo = math.huge
						Module.CurrentAmmo = math.huge
						Module.ReloadTime = 0
						game:GetService("ReplicatedStorage").ReloadEvent:FireServer(Child)
					until not Child or not Child.Parent
				end)
			end
		end
	end)
end)

LocalPlayer.Chatted:Connect(function(Message)
	if string.lower(Message) == "/disable" and enable then
		enable = false
		game:GetService("StarterGui"):SetCore("SendNotification",{
			Title = "LocalPlayer#7434",
			Text = "Rapid fire disabled!"
		})
		ShootEvent.Parent = game:GetService("ReplicatedStorage")
		FakeShootEvent:Destroy()
	end
end)

game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "LocalPlayer#7434",
	Text = "Rapid fire enabled!"
})
